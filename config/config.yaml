# path or URL to sample sheet in tsv format 
# Varibles: sample, condition, replicate, included, batch and notes.
samples: config/samples.tsv

# path or URL to sequencing unit sheet in tsv format.
# Variables: sample, library_type, lane, fastq1 fastq2, md5_fastq1 and md5fastq2
units: config/units.tsv

# path or URL to design matrix in tsv format.
# Variables: sample, condition and additional varibles depending on experimental design.
design: config/design_matrix.tsv

# path to the results directory
outdir: "results"

# path to the log directory
logdir: "logs"

# Project name
project: "test"

# Paths to resources files
library_file: resources/sgRNA_library.txt
cnv_value_file: resources/CNV_value.tsv

# Sample filtering
sample_filters:
  included: True
  batch: null
  condition: null

# Snakemake wrappers:
wrapper:
  qc: "v7.1.0/bio/fastqc"
  trimming: "v7.1.0/bio/cutadapt/se"

# Conda environments
conda_envs: 
  mageck: env/mageck.yaml # There is not snakemake wrapper for MAGECK
  crisprcleanR: env/crisprcleanR.yaml # Create a conda env with R-base and CRISPRcleanR.
  bagel2: env/bagel2.yaml # To check if there is a snakemake wrapper (long-term task)
  hitselection: env/hitselection.yaml # To check if there is a snakemake wrapper (long-term task)
  drugz: env/drugz.yaml # To check if there is a snakemake wrapper (long-term task)
  vispr: env/vispr.yaml # To decide if VISPR should be included (long-term task)

# Optional steps
# CNV correction
cnv_correction: 
  enabled: True
  
  # CNV Method. Options: CRISPRcleanR  MAGECK.
  cnv_method: ""

# To choose the testing method/s to run.
essentiality_methods:
  - mageck_rra
  - mageck_mle
  - bagel

# Parameters
parameters:

  # Activate when UMIs are used in the sequencing procedure
  umi_processing:

    # True: UMIs processing activated
    # False: UMIS processing deactivated
    enabled: False

    # In case UMIs processing is activated, one or two UMI pattern
    # should be provided by their literal sequecing or regular 
    # expressions
    umi_pattern1: ""
    umi_pattern2: ""

  # Trimming
  trimming:
    
    # True: Cutadapt to remove primers (Recomended when primers are in different sequence positions)
    # False: MAGECK count to remove primers (Recommended when primers are always in the same position) 
    enabled: True

    adapters: ""

    # To add additional parameters (cutadapt extra parameters)
    extra: ""

  #fastq_screen: To assess if contamination should be evaluated?

  # Count method. Options: MAGECK count, Bowtie2, STAR. (How to incorporate the last ones should be evaluated)
  # So far, MAGECK is the only method.

  mageck_count_raw:

    # Extra arguments for the aligner.
    extra: ""

  mageck_count_norm:
        
    # Normalization method (Only for MAGECK count). Options: "none", "median", "total" and "control"
    norm_method: "median"

    # Extra arguments for the aligner.
    extra: ""

    # sgRNA control for MAGECK count normalization.
    sgRNA_control: ""

    # Output prefix according to normalization.
    # normalization = "none" -> "raw"
    # normalization = "median" <- "norm_median"
    # normalization = "control" <- "norm_ctrl"
    out_prefix: "raw"

  cnv_correction:

    # Library type: "custom" or "built-in" (CRISPRcleanR)
    library_type: "custom"

    # CRISPRcleanR input library
    sgrna_library: "resources/sgRNA_libraries/processed/broadgpp-brunello-library-contents_CRISPRcleanR_prepared_2025_07_01.txt"
    
    # Minimal sgRNA reads: indicates the minimal number of counts that each individual sgRNA needs 
    # to have in the controls (on average) in order to be included in the output.
    min_reads: 30
    
    # Normalization method: 
    # 1. 'ScalingByTotalReads' for scaling samples by total numbers or reads,
    # 2. 'MedRatios' to use the median of ratios method 
    # 3. Gene name for scaling samples by total number of reads of the guides targeting that gene.
    norm_method: "ScalingByTotalReads"

    # The minimal number of different genes that the set of sgRNAs within a region of estimated 
    # equal logFCs should target in order for theri logFCs to be corrected
    min_genes: 3

    # Extra parameters: They could be DNAcopy parameters.
    extra: ""
  
  cnv_correction_qc:
    
    # Paramter to select lfc from positive or negative selection.
    selection_type: "negative"
  
  mageck_rra_test:

    # Normalization method: 
    # It should be always "none" because normalization is performed previously.
    norm_method: "none"

    # Method to calculate log2FC at gene level from sgRNA values.
    gene_lfc_method: "median" # Other values: "mean", "alphamedian", "alphamean", "secondbest"

    # P adjust method.
    p_adj_method: "fdr" # Other values: Holm's method (holm) and pound's method (pound)

    # FDR P-value threshold for RRA in gene test. Default: 0.25
    gene_fdr_thres: 0.25 

    # Remove sgRNAs whose mean value is 0 at different levels.
    # Default: "both" to remove sgRNAs totally absent in all both groups.
    remove_zero: "both"
    
    # Control condition
    ctrl_cond: "T0"

    # Treatment condition
    treat_cond: "T1"

    # Extra arguments for MAGECK test.
    # Main extra parameters: --control-sgrna, --control-gene. --paired, --variance-estimation-samples, cnv related params
    extra: ""

  mageck_mle_test:   
    
    # Normalization method: 
    # It should be always "none" because normalization is performed previously.
    norm_method: "none"

    # P adjust method.
    p_adj_method: "fdr" # Other values: Holm's method (holm) and pound's method (pound)

    # Extra arguments for MAGECK MLE.
    # Main extra parameters: --control-sgrna, --control-gene, CNV related parameters, sgRNA efficiency related information.
    # As permutation round is suggested to 10 but it is 2 in default, it is set as extra
    # --no-permutation-by-group: In homegeneous sgRNA libraries as Brunello.
    extra: "--permutation-round 10 --no-permutation-by-group"
  
  # TODO: Evaluate if it should be incorporated.
  #mageck_pathway:
    # Extra arguments for MAGECK Pathway.
  #  extra: ""
  
  # TODO: Evaluate if it should be incorporated.
  #mageck_plot:
    # Extra arguments for MAGECK Plot. 
  #  extra: ""

  # TODO: Planned.
  bagel2_fc:

    # Extra arguments for BAGEL2. 
    extra: ""
  
  bagel2_bf:
    
    # BAGEL2 essential genes.
    essential_genes: resources/bagel2/CEGv2.txt

    # BAGEL2 non-essential genes.
    non_essential_genes: resources/bagel2/NEGv1.txt

    # Extra BAGEL2 BF parameters.
    extra: ""

  bagel2_pr:
    
    # Extra BAGEL2 PR parameters
    extra: ""
  

  # TODO: Planned.
  #hitselection:
    # Extra arguments for HitSelection. 
  #  extra: ""
  
  # TODO: Planned.
  #drugz:
    # Extra arguments for Drugz. 
  #  extra: ""

  summary_report:
    # Extra arguments for CRISPR screening quality plots generation.
    extra: ""

# Resources: Think about if resources should be specified here. Maybe just in case a cluster was 
# used in this pipeline.

resources:
    default:
        threads: 1
        mem_mb:  4096
        runtime: 10
   
    qc_raw:
        threads: 8
        mem_mb:  4096
        runtime: 10

    trimming:
        threads: 8
        mem_mb: 4096
        runtime: 10

    qc_trimming:
        threads: 8
        mem_mb:  4096
        runtime: 10
    
    mageck_count_raw: # To check if this MAGECK count allows multi-thread.
        mem_mb:  4096
        runtime: 10
    
    mageck_count_norm: # To check if this MAGECK count allows multi-thread.
        mem_mb:  4096
        runtime: 10

    cnv_correction:
        threads: 8
        mem_mb:  4096
        runtime: 10

    mageck_rra_test: # To check if this function allows multi-thread.
        mem_mb:  4096
        runtime: 10

    mageck_mle_test: # To check if this function allows multi-thread.
        threads: 8
        mem_mb:  4096
        runtime: 10

    bagel2_fc: # To check if this function allows multi-thread.
        mem_mb:  4096
        runtime: 10

    bagel2_bf: # To check if this function allows multi-thread.
        mem_mb:  4096
        runtime: 10

    bagel2_pr: # To check if this function allows multi-thread.
        mem_mb:  4096
        runtime: 10

    summary_report: # To check if this function allows multi-thread.
        threads: 2
        mem_mb:  4096
        runtime: 10